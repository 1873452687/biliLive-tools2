name: Build/build Electron app

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Cache Electron
        uses: actions/cache@v3
        with:
          path: ~\AppData\Local\electron\Cache
          key: ${{ runner.os }}-electron-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/pnpm-lock.yaml')) }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache Electron-Builder
        uses: actions/cache@v3
        with:
          path: ~\AppData\Local\electron-builder\Cache
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles(format('{0}{1}', github.workspace, '/pnpm-lock.yaml')) }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-

      # - name: Install Dependencies
      #   run: npm ci

      - name: Download File
        run: |
          # 使用 curl 下载文件
          curl -LJO  https://github.com/renmu123/biliLive-tools/releases/download/0.2.1/bin.zip

      - name: Extract File
        run: |
          # 使用 unzip 解压 ZIP 文件
          powershell Expand-Archive -Path bin.zip -DestinationPath resources

      - name: remove file
        run: |
          del bin.zip

      - name: build-win
        run: pnpm run buid:win:app
      - name: build-win-no-ffmpeg
        run: pnpm run buid:win:app-no-ffmpeg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: exe
          path: packages/app/dist/*.exe

permissions:
  contents: write
